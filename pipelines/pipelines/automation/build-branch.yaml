#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: branch-automation
  namespace: galasa-build
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  params:
  - name: branch
    type: string
    default: main
  - name: refspec
    type: string
    default: refs/heads/main:refs/heads/main
  workspaces:
  - name: git-workspace
  tasks:
# 
# 
# 
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: $(params.branch)
    - name: refspec
      value: $(params.refspec)
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
# 
#
#
  - name: apply-galasa-properties
    taskRef: 
      name: galasactl
    runAfter:
    - clone-automation
    params:
    - name: galasaHome
      value: /workspace/git/$(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/infrastructure/cicsk8s/galasa-dev
    - name: command
      value:
        - resources
        - apply
        - -f
        - cps-properties.yaml 
        - --bootstrap
        - https://prod1-galasa-dev.cicsk8s.hursley.ibm.com/api/bootstrap
    - name: galasactlImageTag
      value: stable
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  finally:
  - name: report-failed-build
    when:
      - input: "$(tasks.status)"
        operator: in
        values: ["Failed"]
    taskRef:
      name: slack-post
    params:
    - name: pipelineName
      value: $(context.pipeline.name)
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: branch
      value: $(params.branch)
