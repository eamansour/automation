#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

# This EventListener gets called when there is a 'Main Build Orchestrator'
# workflow run that has completed successfully in the 'galasa' repository.

# It calls the Tekton Pipeline 'recycle-prod1' which is responsible for 
# recycling the Deployments of the prod1 Galasa service.

# It also calls the Tekton Pipeline 'build-internal-integratedtests' which
# builds the integration tests for Galasa Managers which require internal 
# resources (z/OS, CICS etc) and publishes these to a remote maven repo.

apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-galasa-monorepo-workflow-completed-listener
  annotations:
    tekton.dev/payload-validation: "false"
spec:
  serviceAccountName: tekton-trigger
  triggers:
    - name: gitlab-push-events-trigger
      interceptors:
        - name: "validate GitHub payload and filter on eventType"
          ref:
            name: "github"
          params:
          - name: "eventTypes"
            value: ["workflow_run"]
        - name: "CEL filter: only when the workflow run is completed"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.action in ['completed']"
        - name: "CEL filter: only when the workflow run is successful"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.workflow_run.conclusion in ['success']"
        - name: "CEL filter: only when the workflow run name is 'Main Build Orchestrator'"  
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.workflow_run.name in ['Main Build Orchestrator']"
        - name: "CEL filter: only when the workflow is for the 'galasa' repository"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.repository.name in ['galasa']"
        - name: "CEL filter: only when the workflow branch is 'main'"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.workflow_run.head_branch in ['main']"
       
      template:
        spec:
          resourcetemplates:
            - apiVersion: tekton.dev/v1beta1
              kind: PipelineRun
              metadata:
                generateName: recycle-prod1-
              spec:
                pipelineRef:
                  name: recycle-prod1
                serviceAccountName: galasa-build-bot
                workspaces:
                - name: git-workspace
                  volumeClaimTemplate:
                    spec:
                      storageClassName: longhorn-temp
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 20Gi

            - apiVersion: tekton.dev/v1beta1
              kind: PipelineRun
              metadata:
                generateName: build-internal-integratedtests-
              spec:
                pipelineRef:
                  name: build-internal-integratedtests
                serviceAccountName: galasa-build-bot
                podTemplate:
                  volumes:
                  - name: gradle-properties
                    secret:
                      secretName: gradle-properties
                  - name: gpg-key
                    secret:
                      secretName: gpg-key
                workspaces:
                - name: git-workspace
                  volumeClaimTemplate:
                    spec:
                      storageClassName: longhorn-temp
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 20Gi