#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

apiVersion: batch/v1
kind: CronJob
metadata:
  name: regression-test-docker
  namespace: galasa-dev
spec:
  schedule: 5 5 * * * # Daily at 05:05
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          initContainers:
          - name: permissions
            command:
            - chmod
            - -R
            - "777"
            - /galasa
            image: ghcr.io/galasa-dev/busybox:1.36.1
            imagePullPolicy: IfNotPresent
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /galasa
              name: static-files

          - name: clean
            command:
            - rm
            - -rf
            - /galasa/*
            image: ghcr.io/galasa-dev/galasactl-ibm-x86_64:main
            imagePullPolicy: Always
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /galasa
              name: static-files

          - name: run-prepare
            command:
            - galasactl
            - runs
            - prepare
            - --bootstrap
            - https://prod1-galasa-dev.cicsk8s.hursley.ibm.com/api/bootstrap
            - --portfolio
            - /galasa/tests.yaml
            - --stream
            - inttests
            - --test
            - local.DockerLocalJava17Ubuntu
            - --log
            - '-'
            image: ghcr.io/galasa-dev/galasactl-ibm-x86_64:main
            imagePullPolicy: IfNotPresent
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            env:
            - name: GALASA_HOME
              value: /galasa
            - name: GALASA_TOKEN
              valueFrom:
                secretKeyRef:
                  name: galasa-prod1-token
                  key: token
            volumeMounts:
            - mountPath: /galasa
              name: static-files

          - name: run-submit
            command:
            - galasactl
            - runs
            - submit
            - --bootstrap
            - https://prod1-galasa-dev.cicsk8s.hursley.ibm.com/api/bootstrap
            - --portfolio
            - /galasa/tests.yaml
            - --throttle
            - "10"
            - --throttlefile
            - throttle
            - --poll
            - "10"
            - --progress
            - "1"
            - --trace
            - --reportjson
            - /galasa/test.json
            - --noexitcodeontestfailures
            - --log
            - '-'
            image: ghcr.io/galasa-dev/galasactl-ibm-x86_64:main
            imagePullPolicy: IfNotPresent
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            env:
            - name: GALASA_HOME
              value: /galasa
            - name: GALASA_TOKEN
              valueFrom:
                secretKeyRef:
                  name: galasa-prod1-token
                  key: token
            volumeMounts:
            - mountPath: /galasa
              name: static-files

          containers:
          - name: submit-report
            command:
            - galasabld
            - slackpost
            - tests
            - --path
            - /galasa/test.json
            - --name
            - "Docker - prod1"
            - --desc
            - "DockerManagerIVT running in the DKRENGINE01"
            - --hook
            args:
            - $(HOOK)
            env:
            - name: HOOK
              valueFrom:
                secretKeyRef:
                  key: webhook
                  name: slack-webhook
            image: ghcr.io/galasa-dev/galasabld-ibm:main
            imagePullPolicy: Always
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /galasa
              name: static-files

          dnsPolicy: ClusterFirst
          nodeSelector:
            kubernetes.io/arch: amd64
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}      
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: static-files

  suspend: false
